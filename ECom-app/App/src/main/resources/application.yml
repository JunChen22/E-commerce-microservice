server:
  port: 8080

server.forward-headers-strategy: framework #

app.eureka-server: localhost

eureka:
  client:
    serviceUrl:
      defaultZone: http://${app.eureka-server}:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

spring:
  application:
    name: app
  datasource:
    url: jdbc:postgresql://localhost/springecommerece
    username: postgres
    password: password
    driverClassName: org.postgresql.Driver
    #initialization-mode: always


# message queue related
spring.rabbitmq:
  host: localhost
  port: 5672
  virtual-host: /
  username: guest
  password: guest
  publisher-confirms: true

# outputs
# CMS and SMS does not need message queue, they only have read operations.
spring.cloud.stream:
  bindings:             # only OMS,PMS,UMS have write operations. Read operations don't need to message queue, non-blocking synchronous.
    order-out-0:  # OMS
      destination: order
      producer:
        required-groups: auditGroup
    orderComplete-out-0: # OMS
      destination: orderComplete
      producer:
        required-groups: auditGroup
    cart-out-0:
      destination: cart
      producer:
        required-groups: auditGroup
    return-out-0:
      destination: return
      producer:
        required-groups: auditGroup
    review-out-0: # PMS
      destination: review
      producer:
        required-groups: auditGroup
    user-out-0:    # UMS
      destination: user
      producer:
        required-groups: auditGroup

logging:
  level:
    #root: ERROR
    org:
      springframework:
        security: DEBUG
    com:
      itsthatjun:
        ecommerce: DEBUG

management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"

---

spring.config.activate.on-profile: docker

spring:
  datasource.url: jdbc:postgresql://postgres/springecommerece

app:
  eureka-server: eureka

spring.rabbitmq.host: rabbitmq
