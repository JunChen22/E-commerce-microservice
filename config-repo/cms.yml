server:
  port: 8081

spring:
  application:
    name: cms
  r2dbc:
    url: r2dbc:postgresql://localhost:5433/contentdb
    username: postgres
    password: password
    pool:
      enabled: true

spring.cloud:
  function:   # can't have space between, tells spring which to use
    definition: articleMessageProcessor
  stream:
    default:
      contentType: application/json
    bindings:
      articleMessageProcessor-in-0:
        destination: adminArticle
        group: adminArticleGroup

      app-article-out-0:
        destination: article
        producer:
          required-groups: auditGroup

---

spring.config.activate.on-profile: docker

server.port: 80

spring:
  r2dbc.url: r2dbc:postgresql://cms-db:5432/contentdb

---
spring.config.activate.on-profile: kafka

spring.cloud.stream.bindings.articleMessageProcessor-in-0.consumer:
  partitioned: true



