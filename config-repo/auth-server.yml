server:
  port: 9999

spring:
  application:
    name: auth-server
  datasource:
    url: jdbc:postgresql://localhost:5438/authdb
    driverClassName: org.postgresql.Driver
    #initialization-mode: always

spring.cloud:
  function:   # can't have space between, tells spring which to use
    definition: userMessageProcessor
  stream:
    default:
      contentType: application/json
    bindings:
      userMessageProcessor-in-0:
        destination: umsUserUpdate
        group: umsUserUpdateGroup

      authLog-out-0: # sending update to UMS to update login log
        destination: authLogUpdate
        producer:
          required-groups: authLogUpdateGroup

jwt:
  HEADER_STRING: Authorization
  tokenPrefix: Bearer
  secretKey: JunChen522
  expirationTimeMinute: 150
  issuer: auth-server

---
spring.config.activate.on-profile: docker

server.port: 80

spring:
  datasource.url: jdbc:postgresql://auth-db:5432/authdb
  redis:
    host: redis

---
spring.config.activate.on-profile: kafka

spring.cloud.stream.bindings.userMessageProcessor-in-0.consumer:
  partitioned: true

spring.cloud.stream.bindings.authLog-out-0:
  partition-key-expression: headers['event-type']