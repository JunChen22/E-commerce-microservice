<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itsthatjun.ecommerce.mbg.mapper.ReturnRequestMapper">
  <resultMap id="BaseResultMap" type="com.itsthatjun.ecommerce.mbg.model.ReturnRequest">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="company_address_id" jdbcType="INTEGER" property="companyAddressId" />
    <result column="order_sn" jdbcType="VARCHAR" property="orderSn" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="return_quantity" jdbcType="INTEGER" property="returnQuantity" />
    <result column="return_name" jdbcType="VARCHAR" property="returnName" />
    <result column="return_phone" jdbcType="VARCHAR" property="returnPhone" />
    <result column="return_status" jdbcType="VARCHAR" property="returnStatus" />
    <result column="handle_time" jdbcType="TIMESTAMP" property="handleTime" />
    <result column="asking_amount" jdbcType="NUMERIC" property="askingAmount" />
    <result column="refunded_amount" jdbcType="NUMERIC" property="refundedAmount" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="handle_note" jdbcType="VARCHAR" property="handleNote" />
    <result column="handle_operator" jdbcType="VARCHAR" property="handleOperator" />
    <result column="receive_operator" jdbcType="VARCHAR" property="receiveOperator" />
    <result column="receive_time" jdbcType="TIMESTAMP" property="receiveTime" />
    <result column="receive_note" jdbcType="VARCHAR" property="receiveNote" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, company_address_id, order_sn, member_id, return_quantity, return_name, 
    return_phone, return_status, handle_time, asking_amount, refunded_amount, reason, 
    description, handle_note, handle_operator, receive_operator, receive_time, receive_note, 
    created_at, updated_at
  </sql>
  <select id="selectByExample" parameterType="com.itsthatjun.ecommerce.mbg.model.ReturnRequestExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from return_request
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from return_request
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from return_request
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.itsthatjun.ecommerce.mbg.model.ReturnRequestExample">
    delete from return_request
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.itsthatjun.ecommerce.mbg.model.ReturnRequest" useGeneratedKeys="true">
    insert into return_request (order_id, company_address_id, order_sn, 
      member_id, return_quantity, return_name, 
      return_phone, return_status, handle_time, 
      asking_amount, refunded_amount, reason, 
      description, handle_note, handle_operator, 
      receive_operator, receive_time, receive_note, 
      created_at, updated_at)
    values (#{orderId,jdbcType=INTEGER}, #{companyAddressId,jdbcType=INTEGER}, #{orderSn,jdbcType=VARCHAR}, 
      #{memberId,jdbcType=INTEGER}, #{returnQuantity,jdbcType=INTEGER}, #{returnName,jdbcType=VARCHAR}, 
      #{returnPhone,jdbcType=VARCHAR}, #{returnStatus,jdbcType=VARCHAR}, #{handleTime,jdbcType=TIMESTAMP}, 
      #{askingAmount,jdbcType=NUMERIC}, #{refundedAmount,jdbcType=NUMERIC}, #{reason,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{handleNote,jdbcType=VARCHAR}, #{handleOperator,jdbcType=VARCHAR}, 
      #{receiveOperator,jdbcType=VARCHAR}, #{receiveTime,jdbcType=TIMESTAMP}, #{receiveNote,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.itsthatjun.ecommerce.mbg.model.ReturnRequest" useGeneratedKeys="true">
    insert into return_request
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="companyAddressId != null">
        company_address_id,
      </if>
      <if test="orderSn != null">
        order_sn,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="returnQuantity != null">
        return_quantity,
      </if>
      <if test="returnName != null">
        return_name,
      </if>
      <if test="returnPhone != null">
        return_phone,
      </if>
      <if test="returnStatus != null">
        return_status,
      </if>
      <if test="handleTime != null">
        handle_time,
      </if>
      <if test="askingAmount != null">
        asking_amount,
      </if>
      <if test="refundedAmount != null">
        refunded_amount,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="handleNote != null">
        handle_note,
      </if>
      <if test="handleOperator != null">
        handle_operator,
      </if>
      <if test="receiveOperator != null">
        receive_operator,
      </if>
      <if test="receiveTime != null">
        receive_time,
      </if>
      <if test="receiveNote != null">
        receive_note,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="companyAddressId != null">
        #{companyAddressId,jdbcType=INTEGER},
      </if>
      <if test="orderSn != null">
        #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="returnQuantity != null">
        #{returnQuantity,jdbcType=INTEGER},
      </if>
      <if test="returnName != null">
        #{returnName,jdbcType=VARCHAR},
      </if>
      <if test="returnPhone != null">
        #{returnPhone,jdbcType=VARCHAR},
      </if>
      <if test="returnStatus != null">
        #{returnStatus,jdbcType=VARCHAR},
      </if>
      <if test="handleTime != null">
        #{handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="askingAmount != null">
        #{askingAmount,jdbcType=NUMERIC},
      </if>
      <if test="refundedAmount != null">
        #{refundedAmount,jdbcType=NUMERIC},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="handleNote != null">
        #{handleNote,jdbcType=VARCHAR},
      </if>
      <if test="handleOperator != null">
        #{handleOperator,jdbcType=VARCHAR},
      </if>
      <if test="receiveOperator != null">
        #{receiveOperator,jdbcType=VARCHAR},
      </if>
      <if test="receiveTime != null">
        #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveNote != null">
        #{receiveNote,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itsthatjun.ecommerce.mbg.model.ReturnRequestExample" resultType="java.lang.Long">
    select count(*) from return_request
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update return_request
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.orderId != null">
        order_id = #{row.orderId,jdbcType=INTEGER},
      </if>
      <if test="row.companyAddressId != null">
        company_address_id = #{row.companyAddressId,jdbcType=INTEGER},
      </if>
      <if test="row.orderSn != null">
        order_sn = #{row.orderSn,jdbcType=VARCHAR},
      </if>
      <if test="row.memberId != null">
        member_id = #{row.memberId,jdbcType=INTEGER},
      </if>
      <if test="row.returnQuantity != null">
        return_quantity = #{row.returnQuantity,jdbcType=INTEGER},
      </if>
      <if test="row.returnName != null">
        return_name = #{row.returnName,jdbcType=VARCHAR},
      </if>
      <if test="row.returnPhone != null">
        return_phone = #{row.returnPhone,jdbcType=VARCHAR},
      </if>
      <if test="row.returnStatus != null">
        return_status = #{row.returnStatus,jdbcType=VARCHAR},
      </if>
      <if test="row.handleTime != null">
        handle_time = #{row.handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.askingAmount != null">
        asking_amount = #{row.askingAmount,jdbcType=NUMERIC},
      </if>
      <if test="row.refundedAmount != null">
        refunded_amount = #{row.refundedAmount,jdbcType=NUMERIC},
      </if>
      <if test="row.reason != null">
        reason = #{row.reason,jdbcType=VARCHAR},
      </if>
      <if test="row.description != null">
        description = #{row.description,jdbcType=VARCHAR},
      </if>
      <if test="row.handleNote != null">
        handle_note = #{row.handleNote,jdbcType=VARCHAR},
      </if>
      <if test="row.handleOperator != null">
        handle_operator = #{row.handleOperator,jdbcType=VARCHAR},
      </if>
      <if test="row.receiveOperator != null">
        receive_operator = #{row.receiveOperator,jdbcType=VARCHAR},
      </if>
      <if test="row.receiveTime != null">
        receive_time = #{row.receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.receiveNote != null">
        receive_note = #{row.receiveNote,jdbcType=VARCHAR},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedAt != null">
        updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update return_request
    set id = #{row.id,jdbcType=INTEGER},
      order_id = #{row.orderId,jdbcType=INTEGER},
      company_address_id = #{row.companyAddressId,jdbcType=INTEGER},
      order_sn = #{row.orderSn,jdbcType=VARCHAR},
      member_id = #{row.memberId,jdbcType=INTEGER},
      return_quantity = #{row.returnQuantity,jdbcType=INTEGER},
      return_name = #{row.returnName,jdbcType=VARCHAR},
      return_phone = #{row.returnPhone,jdbcType=VARCHAR},
      return_status = #{row.returnStatus,jdbcType=VARCHAR},
      handle_time = #{row.handleTime,jdbcType=TIMESTAMP},
      asking_amount = #{row.askingAmount,jdbcType=NUMERIC},
      refunded_amount = #{row.refundedAmount,jdbcType=NUMERIC},
      reason = #{row.reason,jdbcType=VARCHAR},
      description = #{row.description,jdbcType=VARCHAR},
      handle_note = #{row.handleNote,jdbcType=VARCHAR},
      handle_operator = #{row.handleOperator,jdbcType=VARCHAR},
      receive_operator = #{row.receiveOperator,jdbcType=VARCHAR},
      receive_time = #{row.receiveTime,jdbcType=TIMESTAMP},
      receive_note = #{row.receiveNote,jdbcType=VARCHAR},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itsthatjun.ecommerce.mbg.model.ReturnRequest">
    update return_request
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="companyAddressId != null">
        company_address_id = #{companyAddressId,jdbcType=INTEGER},
      </if>
      <if test="orderSn != null">
        order_sn = #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="returnQuantity != null">
        return_quantity = #{returnQuantity,jdbcType=INTEGER},
      </if>
      <if test="returnName != null">
        return_name = #{returnName,jdbcType=VARCHAR},
      </if>
      <if test="returnPhone != null">
        return_phone = #{returnPhone,jdbcType=VARCHAR},
      </if>
      <if test="returnStatus != null">
        return_status = #{returnStatus,jdbcType=VARCHAR},
      </if>
      <if test="handleTime != null">
        handle_time = #{handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="askingAmount != null">
        asking_amount = #{askingAmount,jdbcType=NUMERIC},
      </if>
      <if test="refundedAmount != null">
        refunded_amount = #{refundedAmount,jdbcType=NUMERIC},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="handleNote != null">
        handle_note = #{handleNote,jdbcType=VARCHAR},
      </if>
      <if test="handleOperator != null">
        handle_operator = #{handleOperator,jdbcType=VARCHAR},
      </if>
      <if test="receiveOperator != null">
        receive_operator = #{receiveOperator,jdbcType=VARCHAR},
      </if>
      <if test="receiveTime != null">
        receive_time = #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveNote != null">
        receive_note = #{receiveNote,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itsthatjun.ecommerce.mbg.model.ReturnRequest">
    update return_request
    set order_id = #{orderId,jdbcType=INTEGER},
      company_address_id = #{companyAddressId,jdbcType=INTEGER},
      order_sn = #{orderSn,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=INTEGER},
      return_quantity = #{returnQuantity,jdbcType=INTEGER},
      return_name = #{returnName,jdbcType=VARCHAR},
      return_phone = #{returnPhone,jdbcType=VARCHAR},
      return_status = #{returnStatus,jdbcType=VARCHAR},
      handle_time = #{handleTime,jdbcType=TIMESTAMP},
      asking_amount = #{askingAmount,jdbcType=NUMERIC},
      refunded_amount = #{refundedAmount,jdbcType=NUMERIC},
      reason = #{reason,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      handle_note = #{handleNote,jdbcType=VARCHAR},
      handle_operator = #{handleOperator,jdbcType=VARCHAR},
      receive_operator = #{receiveOperator,jdbcType=VARCHAR},
      receive_time = #{receiveTime,jdbcType=TIMESTAMP},
      receive_note = #{receiveNote,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>