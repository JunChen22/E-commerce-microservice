<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itsthatjun.ecommerce.mbg.mapper.ProductSkuMapper">
  <resultMap id="BaseResultMap" type="com.itsthatjun.ecommerce.mbg.model.ProductSku">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="sku_code" jdbcType="VARCHAR" property="skuCode" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="price" jdbcType="NUMERIC" property="price" />
    <result column="promotion_price" jdbcType="NUMERIC" property="promotionPrice" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="low_stock" jdbcType="INTEGER" property="lowStock" />
    <result column="lock_stock" jdbcType="INTEGER" property="lockStock" />
    <result column="unit_sold" jdbcType="INTEGER" property="unitSold" />
    <result column="publish_status" jdbcType="VARCHAR" property="publishStatus" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, product_id, sku_code, picture, price, promotion_price, stock, low_stock, lock_stock, 
    unit_sold, publish_status, created_at, updated_at
  </sql>
  <select id="selectByExample" parameterType="com.itsthatjun.ecommerce.mbg.model.ProductSkuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product_sku
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product_sku
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.itsthatjun.ecommerce.mbg.model.ProductSkuExample">
    delete from product_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.itsthatjun.ecommerce.mbg.model.ProductSku" useGeneratedKeys="true">
    insert into product_sku (product_id, sku_code, picture, 
      price, promotion_price, stock, 
      low_stock, lock_stock, unit_sold, 
      publish_status, created_at, updated_at
      )
    values (#{productId,jdbcType=INTEGER}, #{skuCode,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, 
      #{price,jdbcType=NUMERIC}, #{promotionPrice,jdbcType=NUMERIC}, #{stock,jdbcType=INTEGER}, 
      #{lowStock,jdbcType=INTEGER}, #{lockStock,jdbcType=INTEGER}, #{unitSold,jdbcType=INTEGER}, 
      #{publishStatus,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.itsthatjun.ecommerce.mbg.model.ProductSku" useGeneratedKeys="true">
    insert into product_sku
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        product_id,
      </if>
      <if test="skuCode != null">
        sku_code,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="promotionPrice != null">
        promotion_price,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="lowStock != null">
        low_stock,
      </if>
      <if test="lockStock != null">
        lock_stock,
      </if>
      <if test="unitSold != null">
        unit_sold,
      </if>
      <if test="publishStatus != null">
        publish_status,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="skuCode != null">
        #{skuCode,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=NUMERIC},
      </if>
      <if test="promotionPrice != null">
        #{promotionPrice,jdbcType=NUMERIC},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="lowStock != null">
        #{lowStock,jdbcType=INTEGER},
      </if>
      <if test="lockStock != null">
        #{lockStock,jdbcType=INTEGER},
      </if>
      <if test="unitSold != null">
        #{unitSold,jdbcType=INTEGER},
      </if>
      <if test="publishStatus != null">
        #{publishStatus,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itsthatjun.ecommerce.mbg.model.ProductSkuExample" resultType="java.lang.Long">
    select count(*) from product_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_sku
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.productId != null">
        product_id = #{row.productId,jdbcType=INTEGER},
      </if>
      <if test="row.skuCode != null">
        sku_code = #{row.skuCode,jdbcType=VARCHAR},
      </if>
      <if test="row.picture != null">
        picture = #{row.picture,jdbcType=VARCHAR},
      </if>
      <if test="row.price != null">
        price = #{row.price,jdbcType=NUMERIC},
      </if>
      <if test="row.promotionPrice != null">
        promotion_price = #{row.promotionPrice,jdbcType=NUMERIC},
      </if>
      <if test="row.stock != null">
        stock = #{row.stock,jdbcType=INTEGER},
      </if>
      <if test="row.lowStock != null">
        low_stock = #{row.lowStock,jdbcType=INTEGER},
      </if>
      <if test="row.lockStock != null">
        lock_stock = #{row.lockStock,jdbcType=INTEGER},
      </if>
      <if test="row.unitSold != null">
        unit_sold = #{row.unitSold,jdbcType=INTEGER},
      </if>
      <if test="row.publishStatus != null">
        publish_status = #{row.publishStatus,jdbcType=VARCHAR},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedAt != null">
        updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_sku
    set id = #{row.id,jdbcType=INTEGER},
      product_id = #{row.productId,jdbcType=INTEGER},
      sku_code = #{row.skuCode,jdbcType=VARCHAR},
      picture = #{row.picture,jdbcType=VARCHAR},
      price = #{row.price,jdbcType=NUMERIC},
      promotion_price = #{row.promotionPrice,jdbcType=NUMERIC},
      stock = #{row.stock,jdbcType=INTEGER},
      low_stock = #{row.lowStock,jdbcType=INTEGER},
      lock_stock = #{row.lockStock,jdbcType=INTEGER},
      unit_sold = #{row.unitSold,jdbcType=INTEGER},
      publish_status = #{row.publishStatus,jdbcType=VARCHAR},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itsthatjun.ecommerce.mbg.model.ProductSku">
    update product_sku
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="skuCode != null">
        sku_code = #{skuCode,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=NUMERIC},
      </if>
      <if test="promotionPrice != null">
        promotion_price = #{promotionPrice,jdbcType=NUMERIC},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="lowStock != null">
        low_stock = #{lowStock,jdbcType=INTEGER},
      </if>
      <if test="lockStock != null">
        lock_stock = #{lockStock,jdbcType=INTEGER},
      </if>
      <if test="unitSold != null">
        unit_sold = #{unitSold,jdbcType=INTEGER},
      </if>
      <if test="publishStatus != null">
        publish_status = #{publishStatus,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itsthatjun.ecommerce.mbg.model.ProductSku">
    update product_sku
    set product_id = #{productId,jdbcType=INTEGER},
      sku_code = #{skuCode,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      price = #{price,jdbcType=NUMERIC},
      promotion_price = #{promotionPrice,jdbcType=NUMERIC},
      stock = #{stock,jdbcType=INTEGER},
      low_stock = #{lowStock,jdbcType=INTEGER},
      lock_stock = #{lockStock,jdbcType=INTEGER},
      unit_sold = #{unitSold,jdbcType=INTEGER},
      publish_status = #{publishStatus,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>